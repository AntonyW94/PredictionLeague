@using PredictionLeague.Contracts.Dashboard


<div class="action-card light">
    <div class="card-header">
        <h5 class="fw-bold text-white">@Round.SeasonName</h5>
        <small class="text-white-50">Round @Round.RoundNumber</small>
    </div>

    <div class="action-card-body">
        <dl class="mb-0">
            <div class="action-card-row action-card-row--centered">
                @if ((Round.Deadline - DateTime.Now).TotalHours < 24)
                {
                    <CountdownTimer Deadline="Round.Deadline" />
                }
                else
                {
                    <div class="badge-group badge-group--red">
                        <span class="badge-icon" title="Deadline"><i class="bi bi-alarm"></i></span>
                        <span>@Round.Deadline.ToString("ddd dd MMM HH:mm")</span>
                    </div>
                }
            </div>
        </dl>
    </div>
    <div class="action-card-footer">
        @if (Round.Deadline > DateTime.Now)
        {
            <NavLink href="@($"/predictions/{Round.Id}")" class="btn green-button w-100">
                @if (Round.HasUserPredicted)
                {
                    <span class="bi bi-pencil-fill me-2"></span>
                    <span>Edit Predictions</span>
                }
                else
                {
                    <span class="bi bi-pencil me-2"></span>
                    <span>Predict Now</span>
                }
            </NavLink>
        }

        <AuthorizeView Roles="@RoleNames.Administrator">
            @if (!Round.AllPredictionsIn && Round.Deadline > DateTime.Now)
            {
                @if (IsChasing)
                {
                    <button class="btn purple-accent-button" disabled>
                        <span class="bi spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Sending...
                    </button>
                }
                else
                {
                    <button class="btn purple-accent-button" @onclick="() => OnChaseEmailsClicked.InvokeAsync(Round.Id)">
                        <span class="bi bi-envelope-fill me-2"></span>Send Chase Emails
                    </button>
                }
            }

            <NavLink href="@($"/admin/rounds/{Round.Id}/results")" class="btn blue-light-button">
                <span class="bi bi-graph-up me-2"></span>
                Enter Results
            </NavLink>
        </AuthorizeView>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public UpcomingRoundDto Round { get; set; } = null!;

    [Parameter]
    public bool IsChasing { get; set; }

    [Parameter]
    public EventCallback<int> OnChaseEmailsClicked { get; set; }
}