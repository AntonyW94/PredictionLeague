@page "/admin/seasons/{SeasonId:int}/rounds"

@attribute [Authorize(Roles = "Administrator")]

@inject HttpClient Http
@inject NavigationManager NavigationManager

@using PredictionLeague.Contracts.Admin.Rounds

<PageTitle>Manage Rounds</PageTitle>

<div class="page-container">
    <div class="admin-table-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold text-white mb-0">Manage Rounds</h3>
            <button class="btn d-flex align-items-center green-button" @onclick="AddRound">
                <span class="bi bi-plus-circle-fill"></span>
                <span class="d-none d-md-inline ms-2">Add Round</span>
            </button>
        </div>

        @if (_rounds == null)
        {
            <p class="text-center text-white"><em>Loading rounds...</em></p>
        }
        else
        {
            <table class="table striped-table responsive-table">
                <thead>
                    <tr>
                        <th>Round Number</th>
                        <th>Start Date</th>
                        <th>Deadline</th>
                        <th>Matches</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var round in _rounds)
                    {
                        <tr>
                            <td data-label="Round Number" class="season-name-cell">Round @round.RoundNumber</td>
                            <td data-label="Start Date">@round.StartDate.ToShortDateString()</td>
                            <td data-label="Deadline">@round.Deadline.ToString("g")</td>
                            <td data-label="Matches">@round.MatchCount</td>
                            <td data-label="Actions" class="actions-cell">
                                <button class="btn btn-sm green-button" @onclick="() => EditRound(round.Id)">Edit</button>
                                <button class="btn btn-sm light-cyan-button mt-4" @onclick="() => EnterResults(round.Id)">Enter Results</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="d-flex justify-content-between mt-4">
                <button class="btn pink-button d-flex align-items-center" @onclick="Back">
                    <span class="bi bi-arrow-left-circle-fill me-2"></span>Back to Season
                </button>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public int SeasonId { get; set; }
    private List<RoundDto>? _rounds;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _rounds = await Http.GetFromJsonAsync<List<RoundDto>>($"api/rounds/by-season/{SeasonId}");
        }
        catch (Exception)
        {
            // Handle error
        }
    }

    private void AddRound() { NavigationManager.NavigateTo($"/admin/seasons/{SeasonId}/create-round"); }
    private void EditRound(int roundId) => NavigationManager.NavigateTo($"/admin/rounds/edit/{roundId}");
    private void Back() => NavigationManager.NavigateTo($"/admin/seasons/edit/{SeasonId}");
    private void EnterResults(int roundId) => NavigationManager.NavigateTo($"/admin/rounds/{roundId}/submit-results");
}