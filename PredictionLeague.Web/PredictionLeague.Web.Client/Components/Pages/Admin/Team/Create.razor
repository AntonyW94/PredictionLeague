@page "/admin/teams/create"

@attribute [Authorize(Roles = RoleNames.Administrator)]

@inject HttpClient Http

@using PredictionLeague.Contracts.Admin.Teams

<PageTitle>Create Team</PageTitle>

<div class="page-container">
    <div class="form-container">
        <h3 class="text-center fw-bold text-white mb-4">Create New Team</h3>
        <BaseFormComponent TModel="CreateTeamRequest"
                           Model="_model"
                           SubmitAction="HandleCreateTeamAsync"
                           SuccessRedirectUrl="/admin/teams"
                           BackUrl="/admin/teams"
                           SuccessAlertMessage="Team created successfully!"
                           BusyText="Creating Team...">
            <ChildContent>
                <div class="mb-3">
                    <label for="name" class="form-label text-white">Team Name</label>
                    <InputText id="name" class="form-control" @bind-Value="_model.Name" />
                    <StyledValidationMessage For="@(() => _model.Name)" />
                </div>

                <div class="mb-3">
                    <label for="logoUrl" class="form-label text-white">Logo URL</label>
                    <InputText id="logoUrl" class="form-control" @bind-Value="_model.LogoUrl" />
                    <StyledValidationMessage For="@(() => _model.LogoUrl)" />
                </div>
            </ChildContent>
        </BaseFormComponent>
    </div>
</div>

@code {
    private readonly CreateTeamRequest _model = new();
   
    private Task<HttpResponseMessage> HandleCreateTeamAsync()
    {
        return Http.PostAsJsonAsync("api/teams/create", _model);
    }
}