@page "/admin/teams"
@attribute [Authorize(Roles = "Administrator")]
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using PredictionLeague.Shared.Admin.Teams

<PageTitle>Manage Teams</PageTitle>

<div class="my-details-container">
    <div class="admin-content-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold text-white mb-0">Manage Teams</h3>
            <button class="btn d-flex align-items-center" style="background-color: var(--pl-green); color: var(--pl-purple); font-weight: 700;" @onclick='() => NavigationManager.NavigateTo("/admin/teams/create")'>
                <span class="bi bi-plus-circle-fill me-2"></span>Create Team
            </button>
        </div>

        @if (_teams == null)
        {
            <p class="text-center text-white"><em>Loading teams...</em></p>
        }
        else
        {
            <div class="team-grid">
                @foreach (var team in _teams)
                {
                    <div class="team-card" @onclick="() => EditTeam(team.Id)">
                        <div class="team-card-logo-bg">
                            <img src="@team.LogoUrl" alt="@team.Name logo" class="team-card-logo" />
                        </div>
                        <div class="team-card-body">
                            <h5 class="team-card-name">@team.Name</h5>
                            <button class="btn btn-sm w-100 edit-button">Edit</button>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<style>
    .my-details-container { background-color: var(--pl-purple); min-height: calc(100vh - 56px); padding: 2rem; }
    .admin-content-container { max-width: 1200px; margin: auto; }
    
    .team-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 1.5rem;
    }

    .team-card {
        background-color: var(--pl-light-purple);
        border-radius: 8px;
        overflow: hidden;
        text-align: center;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        cursor: pointer; 
    }

    .team-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.2);
    }

    .team-card-logo-bg {
        background-color: #fff;
        padding: 1.5rem;
        height: 150px;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: background-color 0.2s ease-in-out;
    }
    
    .team-card:hover .team-card-logo-bg {
        background-color: var(--pl-green);
    }

    .team-card-logo {
        height: 80px;
        max-width: 100%;
    }

    .team-card-body {
        padding: 1rem;
    }

    .team-card-name {
        color: white;
        font-weight: 500;
        margin-bottom: 1rem;
        min-height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .edit-button {
        background-color: var(--pl-green);
        color: var(--pl-purple);
        font-weight: 500;
    }

        .edit-button:hover {
            background-color: white;
            color: var(--pl-purple);
        }
    
</style>

@code {
    private List<TeamDto>? _teams;
    protected override async Task OnInitializedAsync() { _teams = await Http.GetFromJsonAsync<List<TeamDto>>("api/teams"); }
    private void EditTeam(int teamId) { NavigationManager.NavigateTo($"/admin/teams/edit/{teamId}"); }
}