@page "/admin/teams"

@attribute [Authorize(Roles = "Administrator")]

@inject HttpClient Http
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Authorization
@using PredictionLeague.Shared.Admin.Teams

<PageTitle>Manage Teams</PageTitle>

<div class="page-container">
    <div class="admin-content-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold text-white mb-0">Manage Teams</h3>
            <button class="btn d-flex align-items-center green-button" @onclick='() => NavigationManager.NavigateTo("/admin/teams/create")'>
                <span class="bi bi-plus-circle-fill me-2"></span>Create Team
            </button>
        </div>

        @if (_teams == null)
        {
            <p class="text-center text-white"><em>Loading teams...</em></p>
        }
        else
        {
            <div class="team-grid">
                @foreach (var team in _teams)
                {
                    <div class="team-card" @onclick="() => EditTeam(team.Id)">
                        <div class="team-card-logo-bg">
                            <img src="@team.LogoUrl" alt="@team.Name logo" class="team-card-logo" />
                        </div>
                        <div class="team-card-body">
                            <h5 class="team-card-name">@team.Name</h5>
                            <button class="btn btn-sm w-100 green-button">Edit</button>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<TeamDto>? _teams;
    protected override async Task OnInitializedAsync() { _teams = await Http.GetFromJsonAsync<List<TeamDto>>("api/teams"); }
    private void EditTeam(int teamId) { NavigationManager.NavigateTo($"/admin/teams/edit/{teamId}"); }
}