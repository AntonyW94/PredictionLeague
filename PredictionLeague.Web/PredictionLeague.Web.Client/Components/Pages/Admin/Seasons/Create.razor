@page "/admin/seasons/create"

@attribute [Authorize(Roles = RoleNames.Administrator)]

@inject HttpClient Http

@using PredictionLeague.Contracts.Admin.Seasons

<PageTitle>Create Season</PageTitle>

<div class="page-container">
    <div class="form-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold text-white mb-0">Create New Season</h3>
        </div>

        <BaseFormComponent TModel="CreateSeasonRequest"
                           Model="_model"
                           SubmitAction="HandleCreateSeasonAsync"
                           SuccessRedirectUrl="/admin/seasons"
                           BackUrl="/admin/seasons"
                           SuccessAlertMessage="Season created successfully!"
                           BusyText="Creating Season...">
            <ChildContent>
                <div class="row">
                    <div class="col-md-8 mb-3">
                        <label for="name" class="form-label text-white">Season Name</label>
                        <InputText id="name" class="form-control" @bind-Value="_model.Name" placeholder="e.g., 2025/2026" />
                        <StyledValidationMessage For="@(() => _model.Name)" />
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="numberOfRounds" class="form-label text-white">Rounds</label>
                        <InputNumber id="numberOfRounds" class="form-control" @bind-Value="_model.NumberOfRounds" />
                        <StyledValidationMessage For="@(() => _model.NumberOfRounds)" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="startDate" class="form-label text-white">Start Date</label>
                        <InputDate id="startDate" class="form-control" @bind-Value="_model.StartDate" />
                        <StyledValidationMessage For="@(() => _model.StartDate)" />
                    </div>

                    <div class="col-md-6 mb-3">
                        <label for="endDate" class="form-label text-white">End Date</label>
                        <InputDate id="endDate" class="form-control" @bind-Value="_model.EndDate" />
                        <StyledValidationMessage For="@(() => _model.EndDate)" />
                    </div>
                </div>

                <div class="mb-3">
                    <label for="apiLeagueId" class="form-label text-white">API League ID</label>
                    <InputNumber id="apiLeagueId" class="form-control" @bind-Value="_model.ApiLeagueId" />
                    <StyledValidationMessage For="@(() => _model.ApiLeagueId)" />
                </div>
            </ChildContent>
        </BaseFormComponent>
    </div>
</div>

@code {
    private readonly CreateSeasonRequest _model = new()
    {
        StartDate = DateTime.Today,
        EndDate = DateTime.Today.AddMonths(9),
        NumberOfRounds = 38
    };

    private Task<HttpResponseMessage> HandleCreateSeasonAsync()
    {
        return Http.PostAsJsonAsync("api/seasons/create", _model);
    }
}