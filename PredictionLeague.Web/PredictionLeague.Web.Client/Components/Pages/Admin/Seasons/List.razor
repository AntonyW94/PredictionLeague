@page "/admin/seasons"
@attribute [Authorize(Roles = "Administrator")]
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using PredictionLeague.Shared.Admin.Seasons

<PageTitle>Manage Seasons</PageTitle>

<div class="page-container">
    <div class="admin-table-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold text-white mb-0">Manage Seasons</h3>
            <button class="btn d-flex align-items-center green-button" @onclick='() => NavigationManager.NavigateTo("/admin/seasons/create")'>
                <span class="bi bi-plus-circle-fill me-2"></span>Create Season
            </button>
        </div>

        @if (_seasons == null)
        {
            <p class="text-center text-white"><em>Loading...</em></p>
        }
        else
        {
            <table class="table table-striped striped-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Rounds</th>
                        <th>Active</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var season in _seasons)
                    {
                        <tr>
                            <td class="align-middle">@season.Name</td>
                            <td class="align-middle">@season.StartDate.ToShortDateString()</td>
                            <td class="align-middle">@season.EndDate.ToShortDateString()</td>
                            <td class="align-middle">
                                <a href="/admin/seasons/@season.Id/rounds" class="text-white">@season.RoundCount</a>
                            </td>
                            <td class="align-middle">
                                @if (season.IsActive)
                                {
                                    <span class="badge green-button">Yes</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">No</span>
                                }
                            </td>
                            <td class="text-end align-middle">
                                <button class="btn btn-sm me-2 light-cyan-button" @onclick="() => AddRound(season.Id)">Add Round</button>
                                <button class="btn btn-sm green-button" @onclick="() => EditSeason(season.Id)">Edit</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

<style>
    .page-container {
        background-color: var(--pl-purple);
        min-height: calc(100vh - 56px);
        padding: 2rem;
    }

    .admin-table-container {
        background-color: var(--pl-light-purple);
        padding: 2.5rem;
        border-radius: 8px;
        max-width: 900px;
        margin: auto;
    }    
</style>

@code {
    private List<SeasonDto>? _seasons;
    protected override async Task OnInitializedAsync() { _seasons = await Http.GetFromJsonAsync<List<SeasonDto>>("api/admin/seasons"); }
    private void EditSeason(int seasonId) { NavigationManager.NavigateTo($"/admin/seasons/edit/{seasonId}"); }
    private void AddRound(int seasonId) { NavigationManager.NavigateTo($"/admin/seasons/{seasonId}/create-round"); }
}
