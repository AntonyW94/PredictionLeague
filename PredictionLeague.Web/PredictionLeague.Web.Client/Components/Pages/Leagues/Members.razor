@page "/leagues/{LeagueId:int}/members"

@inject HttpClient Http
@inject NavigationManager NavigationManager

@using PredictionLeague.Contracts.Leagues

<PageTitle>Manage League Members</PageTitle>

<div class="page-container">
    <div class="admin-table-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold text-white mb-0">Manage Members for @_leagueData?.LeagueName</h3>
        </div>

        @if (_leagueData == null)
        {
            <p class="text-center text-white"><em>Loading members...</em></p>
        }
        else
        {
            <table class="table striped-table responsive-table">
                <thead>
                    <tr>
                        <th>Member Name</th>
                        <th>Joined</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var member in _leagueData.Members)
                    {
                        <tr>
                            <td data-label="Name" class="header-cell">@member.FullName</td>
                            <td data-label="Joined At">@member.JoinedAt.ToString("dd MMM yyyy")</td>
                            <td data-label="Status">
                                @if (member.Status == "Approved")
                                {
                                    <span class="badge green-button">@member.Status</span>
                                }
                                else
                                {
                                    <span class="badge dark-pink-button">@member.Status</span>
                                }
                            </td>

                            <td data-label="Actions" class="actions-cell">
                                @if (member.CanBeApproved)
                                {
                                    <button class="btn btn-sm light-cyan-button" @onclick="() => ApproveMember(member.UserId)">Approve</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <button class="btn pink-button d-flex align-items-center" @onclick="BackToLeagues">
                <span class="bi bi-arrow-left-circle-fill me-2"></span>Back to Leagues
            </button>
        }
    </div>
</div>

@code {
    [Parameter]
    public int LeagueId { get; set; }

    private LeagueMembersPageDto? _leagueData;

    protected override async Task OnInitializedAsync()
    {
        await LoadMembers();
    }

    private async Task LoadMembers()
    {
        try
        {
            _leagueData = await Http.GetFromJsonAsync<LeagueMembersPageDto>($"api/leagues/{LeagueId}/members");
        }
        catch (Exception)
        {
            // Handle error
        }
    }

    private async Task ApproveMember(string memberId)
    {
        var response = await Http.PostAsync($"api/leagues/{LeagueId}/members/{memberId}/approve", null);
        if (response.IsSuccessStatusCode)
            await LoadMembers();

        // Handle error
    }

    private void BackToLeagues()
    {
        NavigationManager.NavigateTo("/leagues");
    }
}
