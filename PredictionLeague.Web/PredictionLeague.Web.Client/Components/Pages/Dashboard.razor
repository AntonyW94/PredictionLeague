@page "/dashboard"
@using PredictionLeague.Contracts.Dashboard
@attribute [Authorize]

@inject HttpClient Http
@inject IAuthenticationService AuthenticationService

<PageTitle>Dashboard</PageTitle>

<div class="page-container">
    <div class="dashboard-container">
        @if (_isLoading)
        {
            <p class="text-center text-white"><em>Loading your dashboard...</em></p>
        }
        else
        {
            <div class="row align-items-stretch">
                <!-- Upcoming Rounds Column -->
                <div class="col-lg-4 mb-4">
                    <div class="dashboard-card h-100">
                        <h3 class="text-white text-center fw-bold mb-4">Upcoming Rounds</h3>
                        @if (_dashboardData?.UpcomingRounds != null && _dashboardData.UpcomingRounds.Any())
                        {
                            <div class="carousel-container">
                                @if (_dashboardData.UpcomingRounds.Count > 1)
                                {
                                    <button class="carousel-btn" @onclick="ShowPreviousRound" disabled="@(_currentRoundIndex == 0)">
                                        <span class="bi bi-chevron-left"></span>
                                    </button>
                                }

                                @{
                                    var round = _dashboardData.UpcomingRounds[_currentRoundIndex];
                                    <div class="round-card">
                                        <div class="round-card-header">
                                            <h5 class="mb-0 fw-bold text-white">@round.SeasonName</h5>
                                            <span>Round @round.RoundNumber</span>
                                        </div>
                                        <div class="round-card-body">
                                            <p class="deadline-text">Deadline: @round.Deadline.ToString("ddd dd MMM, HH:mm")</p>
                                            <NavLink href="@($"/predictions/{round.Id}")" class="btn green-button w-100">
                                                Predict Now
                                            </NavLink>
                                            
                                            <AuthorizeView Roles="Administrator">
                                                <NavLink href="@($"/admin/rounds/{round.Id}/submit-results")" class="btn light-cyan-button w-100 mt-3">
                                                    Enter Results
                                                </NavLink>
                                            </AuthorizeView>
                                        </div>
                                    </div>
                                }

                                @if (_dashboardData.UpcomingRounds.Count > 1)
                                {
                                    <button class="carousel-btn" @onclick="ShowNextRound" disabled="@(_currentRoundIndex >= _dashboardData.UpcomingRounds.Count - 1)">
                                        <span class="bi bi-chevron-right"></span>
                                    </button>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="d-flex flex-column align-items-center justify-content-center flex-grow-1">
                                <p class="text-white fw-bold text-center">There are currently no upcoming rounds available for you to predict. Please check back later.</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Leaderboards Column -->
                <div class="col-lg-4 mb-4">
                    <div class="dashboard-card h-100">
                        <h3 class="text-white text-center fw-bold mb-4">Leaderboards</h3>
                        <div class="d-flex flex-column align-items-center justify-content-center flex-grow-1">
                            <span class="bi bi-trophy-fill" style="font-size: 4rem; color: var(--pl-green);"></span>
                            <p class="mt-3 text-white fw-bold text-center">Leaderboard feature coming soon!</p>
                        </div>
                    </div>
                </div>

                <!-- Joinable Leagues Column -->
                <div class="col-lg-4 mb-4">
                    <div class="dashboard-card h-100">
                        <h3 class="text-white text-center fw-bold mb-3">Leagues</h3>
                        @if (_dashboardData?.PublicLeagues != null && _dashboardData.PublicLeagues.Any())
                        {
                            <div class="leagues-list-container">
                                <div class="list-group">
                                    @foreach (var league in _dashboardData.PublicLeagues)
                                    {
                                        <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center joinable-league-item">
                                            <div>
                                                <h6 class="mb-0 fw-bold text-white">@league.Name</h6>
                                                <small class="text-white-50">@league.SeasonName</small>
                                            </div>
                                            @if (league.IsMember)
                                            {
                                                <button class="btn btn-sm btn-secondary" disabled>Already Joined</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-sm dark-pink-button" @onclick="() => JoinLeague(league.Id)">Join</button>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex flex-column align-items-center justify-content-center flex-grow-1">
                                <p class="text-white fw-bold text-center">There are currently no leagues available for you to join. Please check back later.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private DashboardDto? _dashboardData;
    private bool _isLoading = true;
    private int _currentRoundIndex;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _dashboardData = await Http.GetFromJsonAsync<DashboardDto>("api/dashboard/dashboard-data");
        }
        catch (Exception)
        {
            // Handle error, e.g., show an error message
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void ShowPreviousRound()
    {
        if (_currentRoundIndex > 0)
        {
            _currentRoundIndex--;
        }
    }

    private void ShowNextRound()
    {
        if (_dashboardData != null && _currentRoundIndex < _dashboardData.UpcomingRounds.Count - 1)
        {
            _currentRoundIndex++;
        }
    }

    private async Task JoinLeague(int leagueId)
    {
        var result = await AuthenticationService.JoinPublicLeagueAsync(leagueId);
        if (result)
        {
            _isLoading = true;
            await OnInitializedAsync();
        }
    }
}
