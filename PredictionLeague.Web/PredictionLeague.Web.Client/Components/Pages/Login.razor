@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<div class="my-details-container">
    <div class="form-container">
        <h3 class="text-center fw-bold text-white mb-4">Login</h3>

        <EditForm Model="_model" OnValidSubmit="HandleLogin" FormName="loginForm">
            <DataAnnotationsValidator />

            @if (!string.IsNullOrEmpty(_errorMessage))
            {
                <div class="alert alert-danger" role="alert">@_errorMessage</div>
            }

            <div class="mb-3">
                <label for="email" class="form-label text-white">Email address</label>
                <InputText id="email" class="form-control" @bind-Value="_model.Email" />
                <ValidationMessage For="@(() => _model.Email)" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label text-white">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="_model.Password" />
                <ValidationMessage For="@(() => _model.Password)" />
            </div>

            <div class="d-grid mt-4">
                <button type="submit" class="btn" disabled="@_isBusy" style="background-color: var(--pl-green); border-color: var(--pl-green); color: var(--pl-purple); font-weight: 700;">
                    @if (_isBusy)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <span> Logging in...</span>
                    }
                    else
                    {
                        <span>Login</span>
                    }
                </button>
            </div>

            <div class="d-flex align-items-center my-4">
                <div class="flex-grow-1 border-top"></div>
                <div class="px-3 text-white fw-bold">OR</div>
                <div class="flex-grow-1 border-top"></div>
            </div>

            <div class="d-grid gap-2">
                <!-- Google Login Button -->
                <button class="btn social-btn google-btn" @onclick="HandleGoogleLogin">
                    <svg class="social-icon" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><g><path fill="#EA4335" d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"></path><path fill="#4285F4" d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"></path><path fill="#FBBC05" d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"></path><path fill="#34A853" d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"></path><path fill="none" d="M0 0h48v48H0z"></path></g></svg>
                    Continue with Google
                </button>

                <!-- Apple Login Button -->
                <button class="btn social-btn apple-btn" @onclick="HandleAppleLogin">
                    <svg class="social-icon" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="white">
                        <path d="M19.1,13.8 C19.2,13.6 19.2,13.4 19.2,13.2 C19.2,10.6 21.2,8.3 23.5,8 C23.2,7.4 21.9,6.4 20.9,6.4 C19.5,6.4 18.4,7.4 17.9,7.4 C17.3,7.4 16.1,6.6 14.8,6.6 C13.1,6.6 11.8,7.5 11.1,7.5 C10.4,7.5 9.4,6.6 8,6.6 C5.6,6.6 3.7,8.6 3.7,11.5 C3.7,13.5 4.6,15.3 6,16.5 C6.7,17.1 7.6,17.8 8.7,17.8 C9.9,17.8 10.3,17.2 11.9,17.2 C13.5,17.2 13.9,17.8 15.1,17.8 C16.3,17.8 17.1,17.2 17.8,16.5 C18.5,15.9 18.9,15 19.1,13.8 M13.8,4.7 C14.6,3.8 15.8,3.2 17,3.2 C17.3,3.2 18.4,3.4 19.3,3.9 C18.3,4.9 17.6,6.1 17.3,7.4 C16.5,8.2 15.3,8.7 14.2,8.7 C13.9,8.7 12.8,8.5 11.9,8 C12.8,7 13.2,5.6 13.8,4.7"></path>
                    </svg>
                    Continue with Apple
                </button>
            </div>
        </EditForm>
    </div>
</div>

<style>
    /* These styles are scoped to this component */
    .my-details-container {
        background-color: var(--pl-purple);
        min-height: calc(100vh - 56px);
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 2rem;
    }

    .form-container {
        background-color: var(--pl-light-purple);
        padding: 2.5rem;
        border-radius: 8px;
        width: 100%;
        max-width: 400px; /* Narrower form */
    }

    .social-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.75rem;
        font-weight: 500;
        border-radius: 4px;
        transition: background-color 0.2s ease-in-out;
    }

    .social-icon {
        width: 20px;
        height: 20px;
        margin-right: 12px;
    }

    .google-btn {
        background-color: white;
        color: #1f1f1f;
        border: 1px solid #dadce0;
    }

        .google-btn:hover {
            background-color: #f8f9fa;
            border-color: #c6c6c6;
        }

    .apple-btn {
        background-color: black;
        color: white;
        border: 1px solid black;
    }

        .apple-btn:hover {
            background-color: #333;
        }

    /* Override default validation message color */
    .validation-message {
        color: var(--pl-pink);
    }
</style>

@code {
    private LoginRequest _model = new();
    private string? _errorMessage;
    private bool _isBusy;

    private async Task HandleLogin()
    {
        _isBusy = true;
        _errorMessage = null;

        var result = await AuthService.Login(_model);

        if (result.IsSuccess)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _errorMessage = result.Message;
        }

        _isBusy = false;
    }

    private void HandleGoogleLogin()
    {
        _errorMessage = "Google login is not yet implemented.";
    }

    private void HandleAppleLogin()
    {
        _errorMessage = "Apple login is not yet implemented.";
    }
}
